---
name: CI Lazarus

'on':
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'pull_request' || matrix.os == 'ubuntu-latest'
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13]

    steps:
      - uses: actions/checkout@v5

      - name: Cache Lazarus
        uses: actions/cache@v4
        with:
          path: |
            ~/.lazarus
            ~/.cache/fpc
          key: >-
            ${{ runner.os }}-lazarus-${{ hashFiles('**/*.pas') }}
          restore-keys: |
            ${{ runner.os }}-lazarus-

      - uses: gcarreno/setup-lazarus@v3
        with:
          lazarus-version: "dist"

      - name: Build
        run: lazbuild Duhamel_integral.lpi

      - name: Run tests
        run: |
          if [ -f tests/TestProject.lpi ]; then
            lazbuild tests/TestProject.lpi
            test_exec="./tests/TestProject"
            if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
              test_exec="${test_exec}.exe"
            fi
            $test_exec || exit 1
          else
            echo "No tests found, skipping."
          fi
        shell: bash

      - name: Package binary
        if: github.event_name != 'pull_request'
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a Duhamel_integral-windows.zip Duhamel_integral.exe
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            tar -czf Duhamel_integral-linux.tar.gz Duhamel_integral
          else
            tar -czf Duhamel_integral-macos.tar.gz Duhamel_integral
          fi
        shell: bash

      - name: Upload Artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.os }}
          path: |
            *.zip
            *.tar.gz

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: ./artifacts

      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
          body: ${{ github.event.release.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  nightly:
    name: Nightly Build
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/download-artifact@v5
        with:
          path: ./artifacts

      - name: Upload Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Nightly Build"
          tag_name: "nightly"
          prerelease: true
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
